plugins {
	id 'fabric-loom' version "${fabric_loom_version}"
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
}

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url 'https://jitpack.io' }
	maven { url 'https://repo.bluecolored.de/releases' }
}

loom {
	mods {
		"bluemapsignmarkers" {
			sourceSet sourceSets.main
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	compileOnly "de.bluecolored.bluemap:BlueMapAPI:${project.blue_map_api_version}"
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand(["mod_id": project.mod_id,
				"mod_name": project.mod_name,
				"mod_description": project.mod_description,
				"version": project.mod_version,
				"fabric_loader_version": project.loader_version,
				"minecraft_version": project.minecraft_version,
				"java_version": project.java_version,
				"blue_map_version": project.blue_map_version,
				"blue_map_api_version": project.blue_map_api_version])
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = project.java_version.toInteger()
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "i5ZtmNIW"
	if (project.hasProperty('isRelease')) {
		version = version = "${project.mod_version}.${project.findProperty('buildNumber')}"
		versionType = "release"
		changelog.set("Releasenotes and Changelog:\\nhttps://github.com/tpwalke2/BlueMapSignMarkers/releases/tag/v${project.mod_version}")
	} else {
		version = "${project.mod_version}.${project.findProperty('buildNumber')}-alpha"
		versionType = "alpha"
	}
	uploadFile = remapJar
	gameVersions.addAll("${project.minecraft_version}")
	loaders.add("fabric")
	dependencies {
		required.project("P7dR8mSH") // Fabric API
		required.project("swbUV1cr") // BlueMap
	}
	syncBodyFrom = rootProject.file("README.md").text
}